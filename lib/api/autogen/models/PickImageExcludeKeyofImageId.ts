/* tslint:disable */
/* eslint-disable */
/**
 * lineup-backstage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickImageExcludeKeyofImageId
 */
export interface PickImageExcludeKeyofImageId {
    /**
     * 
     * @type {string}
     * @memberof PickImageExcludeKeyofImageId
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PickImageExcludeKeyofImageId
     */
    sourceImageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof PickImageExcludeKeyofImageId
     */
    imageUrlLow?: string;
    /**
     * 
     * @type {number}
     * @memberof PickImageExcludeKeyofImageId
     */
    aspectRatio?: number;
    /**
     * 
     * @type {number}
     * @memberof PickImageExcludeKeyofImageId
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof PickImageExcludeKeyofImageId
     */
    height?: number;
}

/**
 * Check if a given object implements the PickImageExcludeKeyofImageId interface.
 */
export function instanceOfPickImageExcludeKeyofImageId(value: object): value is PickImageExcludeKeyofImageId {
    if (!('sourceImageUrl' in value) || value['sourceImageUrl'] === undefined) return false;
    return true;
}

export function PickImageExcludeKeyofImageIdFromJSON(json: any): PickImageExcludeKeyofImageId {
    return PickImageExcludeKeyofImageIdFromJSONTyped(json, false);
}

export function PickImageExcludeKeyofImageIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickImageExcludeKeyofImageId {
    if (json == null) {
        return json;
    }
    return {
        
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'sourceImageUrl': json['sourceImageUrl'],
        'imageUrlLow': json['imageUrlLow'] == null ? undefined : json['imageUrlLow'],
        'aspectRatio': json['aspectRatio'] == null ? undefined : json['aspectRatio'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
    };
}

export function PickImageExcludeKeyofImageIdToJSON(json: any): PickImageExcludeKeyofImageId {
    return PickImageExcludeKeyofImageIdToJSONTyped(json, false);
}

export function PickImageExcludeKeyofImageIdToJSONTyped(value?: PickImageExcludeKeyofImageId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'imageUrl': value['imageUrl'],
        'sourceImageUrl': value['sourceImageUrl'],
        'imageUrlLow': value['imageUrlLow'],
        'aspectRatio': value['aspectRatio'],
        'width': value['width'],
        'height': value['height'],
    };
}

