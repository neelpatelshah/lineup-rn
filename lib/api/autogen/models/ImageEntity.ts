/* tslint:disable */
/* eslint-disable */
/**
 * lineup-backstage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageEntity
 */
export interface ImageEntity {
    /**
     * Stringified UUIDv4.
     * See [RFC 4112](https://tools.ietf.org/html/rfc4122)
     * @type {string}
     * @memberof ImageEntity
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ImageEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ImageEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ImageEntity
     */
    deletedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    sourceImageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    imageUrlLow?: string;
    /**
     * 
     * @type {number}
     * @memberof ImageEntity
     */
    aspectRatio?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageEntity
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageEntity
     */
    height?: number;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    persistedStatus?: ImageEntityPersistedStatusEnum;
}


/**
 * @export
 */
export const ImageEntityPersistedStatusEnum = {
    Pending: 'PENDING',
    Loaded: 'LOADED',
    Failed: 'FAILED'
} as const;
export type ImageEntityPersistedStatusEnum = typeof ImageEntityPersistedStatusEnum[keyof typeof ImageEntityPersistedStatusEnum];


/**
 * Check if a given object implements the ImageEntity interface.
 */
export function instanceOfImageEntity(value: object): value is ImageEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('sourceImageUrl' in value) || value['sourceImageUrl'] === undefined) return false;
    return true;
}

export function ImageEntityFromJSON(json: any): ImageEntity {
    return ImageEntityFromJSONTyped(json, false);
}

export function ImageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'sourceImageUrl': json['sourceImageUrl'],
        'imageUrlLow': json['imageUrlLow'] == null ? undefined : json['imageUrlLow'],
        'aspectRatio': json['aspectRatio'] == null ? undefined : json['aspectRatio'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'persistedStatus': json['persistedStatus'] == null ? undefined : json['persistedStatus'],
    };
}

export function ImageEntityToJSON(json: any): ImageEntity {
    return ImageEntityToJSONTyped(json, false);
}

export function ImageEntityToJSONTyped(value?: ImageEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
        'imageUrl': value['imageUrl'],
        'sourceImageUrl': value['sourceImageUrl'],
        'imageUrlLow': value['imageUrlLow'],
        'aspectRatio': value['aspectRatio'],
        'width': value['width'],
        'height': value['height'],
        'persistedStatus': value['persistedStatus'],
    };
}

