/* tslint:disable */
/* eslint-disable */
/**
 * lineup-backstage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageEntity } from './ImageEntity';
import {
    ImageEntityFromJSON,
    ImageEntityFromJSONTyped,
    ImageEntityToJSON,
    ImageEntityToJSONTyped,
} from './ImageEntity';
import type { StageEntity } from './StageEntity';
import {
    StageEntityFromJSON,
    StageEntityFromJSONTyped,
    StageEntityToJSON,
    StageEntityToJSONTyped,
} from './StageEntity';

/**
 * 
 * @export
 * @interface VenueEntity
 */
export interface VenueEntity {
    /**
     * Stringified UUIDv4.
     * See [RFC 4112](https://tools.ietf.org/html/rfc4122)
     * @type {string}
     * @memberof VenueEntity
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof VenueEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof VenueEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof VenueEntity
     */
    deletedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof VenueEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof VenueEntity
     */
    location: string;
    /**
     * 
     * @type {Array<ImageEntity>}
     * @memberof VenueEntity
     */
    images?: Array<ImageEntity>;
    /**
     * 
     * @type {Array<StageEntity>}
     * @memberof VenueEntity
     */
    stages?: Array<StageEntity>;
}

/**
 * Check if a given object implements the VenueEntity interface.
 */
export function instanceOfVenueEntity(value: object): value is VenueEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    return true;
}

export function VenueEntityFromJSON(json: any): VenueEntity {
    return VenueEntityFromJSONTyped(json, false);
}

export function VenueEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): VenueEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'name': json['name'],
        'location': json['location'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageEntityFromJSON)),
        'stages': json['stages'] == null ? undefined : ((json['stages'] as Array<any>).map(StageEntityFromJSON)),
    };
}

export function VenueEntityToJSON(json: any): VenueEntity {
    return VenueEntityToJSONTyped(json, false);
}

export function VenueEntityToJSONTyped(value?: VenueEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
        'name': value['name'],
        'location': value['location'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageEntityToJSON)),
        'stages': value['stages'] == null ? undefined : ((value['stages'] as Array<any>).map(StageEntityToJSON)),
    };
}

